{
  "Array Result": { "prefix": "aretval", "body": "\\$aResult = ${1}" },
  "as": { "prefix": "as", "body": "Assign(${1})" },
  "aso": { "prefix": "aso", "body": "AutoItSetOption(${1})" },
  "awgt": { "prefix": "awgt", "body": ["AutoItWinGetTitle()", ""] },
  "awst": { "prefix": "awst", "body": "AutoItWinSetTitle(${1})" },
  "ba": { "prefix": "ba", "body": "BitAND(${1})" },
  "bi": { "prefix": "bi", "body": "BlockInput(${1})" },
  "bin": { "prefix": "bin", "body": "Binary(${1})" },
  "binl": { "prefix": "binl", "body": "BinaryLen(${1})" },
  "binm": { "prefix": "binm", "body": "BinaryMid(${1})" },
  "bn": { "prefix": "bn", "body": "BitNOT(${1})" },
  "bro": { "prefix": "bro", "body": "BitRotate(${1})" },
  "bre": { "prefix": "bre", "body": "Break(${1})" },
  "bs": { "prefix": "bs", "body": "BitShift(${1})" },
  "bx": { "prefix": "bx", "body": "BitXOR(${1})" },
  "ccl": { "prefix": "ccl", "body": "ControlClick(${1})" },
  "cco": { "prefix": "cco", "body": "ControlCommand(${1})" },
  "cd": { "prefix": "cd", "body": "ControlDisable(\"${1}\", \"\", \"\")" },
  "cdt": { "prefix": "cdt", "body": "CDTray(${1})" },
  "ce": { "prefix": "ce", "body": "ControlEnable(\"${1}\", \"\", \"\")" },
  "ceil": { "prefix": "ceil", "body": "Ceiling(${1})" },
  "cf": { "prefix": "cf", "body": "ControlFocus(\"${1}\", \"\", \"\")" },
  "cg": { "prefix": "cg", "body": "ClipGet(${1})" },
  "cgf": { "prefix": "cgf", "body": "ControlGetFocus(${1})" },
  "cgh": { "prefix": "cgh", "body": "ControlGetHandle(${1})" },
  "cgp": { "prefix": "cgp", "body": "ControlGetPos(${1})" },
  "cgt": { "prefix": "cgt", "body": "ControlGetText(${1})" },
  "ch": { "prefix": "ch", "body": "ControlHide(${1})" },
  "clv": { "prefix": "clv", "body": "ControlListView(${1})" },
  "cm": { "prefix": "cm", "body": "ControlMove(${1})" },
  "cp": { "prefix": "cp", "body": "ClipPut(${1})" },
  "cr": { "prefix": "cr", "body": "ConsoleRead(${1})" },
  "cs": { "prefix": "cs", "body": "ControlSetText(${1})" },
  "csh": { "prefix": "csh", "body": "ControlShow(${1})" },
  "cst": { "prefix": "cst", "body": "ControlSetText(${1})" },
  "cw": { "prefix": "cw", "body": "ConsoleWrite(${1} & @CRLF)" },
  "cwb": { "prefix": "cwb", "body": "ConsoleWrite(\"> ${1}\" & @CRLF)" },
  "cwg": { "prefix": "cwg", "body": "ConsoleWrite(\"+ ${1}\" & @CRLF)" },
  "cwo": { "prefix": "cwo", "body": "ConsoleWrite(\"- ${1}\" & @CRLF)" },
  "cwr": { "prefix": "cwr", "body": "ConsoleWrite(\"! ${1}\" & @CRLF)" },
  "cws": { "prefix": "cws", "body": "ConsoleWrite(\"${1}\" & @CRLF)" },
  "cwln": {
    "prefix": "cwln",
    "body": "ConsoleWrite(\"#\" & @ScriptLineNumber & \" - ${1}\" & @CRLF)"
  },
  "cwlnb": {
    "prefix": "cwlnb",
    "body": "ConsoleWrite(\"> #\" & @ScriptLineNumber & \" - ${1}\" & @CRLF)"
  },
  "cwlng": {
    "prefix": "cwlng",
    "body": "ConsoleWrite(\"+ #\" & @ScriptLineNumber & \" - ${1}\" & @CRLF)"
  },
  "cwlno": {
    "prefix": "cwlno",
    "body": "ConsoleWrite(\"- #\" & @ScriptLineNumber & \" - ${1}\" & @CRLF)"
  },
  "cwlnr": {
    "prefix": "cwlnr",
    "body": "ConsoleWrite(\"! #\" & @ScriptLineNumber & \" - ${1}\" & @CRLF)"
  },
  "cwe": { "prefix": "cwe", "body": "ConsoleWriteError(${1} & @CRLF)" },
  "cwes": { "prefix": "cwes", "body": "ConsoleWriteError(\"${1}\" & @CRLF)" },
  "cweln": {
    "prefix": "cweln",
    "body": "ConsoleWriteError(\"#\" & @ScriptLineNumber & ${1} & @CRLF)"
  },
  "cwelns": {
    "prefix": "cwelns",
    "body": "ConsoleWriteError(\"#\" & @ScriptLineNumber & \"${1}\" & @CRLF)"
  },
  "dco": { "prefix": "dco", "body": "DirCopy(${1})" },
  "dcr": { "prefix": "dcr", "body": "DirCreate(${1})" },
  "dgd": { "prefix": "dgd", "body": "DriveGetDrive(${1})" },
  "dgfs": { "prefix": "dgfs", "body": "DriveGetFileSystem(${1})" },
  "dgl": { "prefix": "dgl", "body": "DriveGetLabel(${1})" },
  "dgsi": { "prefix": "dgsi", "body": "DirGetSize(${1})" },
  "dgse": { "prefix": "dgse", "body": "DriveGetSerial(${1})" },
  "dgt": { "prefix": "dgt", "body": "DriveGetType(${1})" },
  "dll": { "prefix": "dll", "body": "DllCall(${1})" },
  "dllc": { "prefix": "dllc", "body": "DllClose(${1})" },
  "dllo": { "prefix": "dllo", "body": "DllOpen(${1})" },
  "dllsc": { "prefix": "dllsc", "body": "DllStructCreate(${1})" },
  "dllsgd": { "prefix": "dllsgd", "body": "DllStructGetData(${1})" },
  "dllsgp": { "prefix": "dllsgp", "body": "DllStructGetPtr(${1})" },
  "dllsgs": { "prefix": "dllsgs", "body": "DllStructGetSize(${1})" },
  "dllssd": { "prefix": "dllssd", "body": "DllStructSetData(${1})" },
  "dm": { "prefix": "dm", "body": "DirMove(${1})" },
  "dma": { "prefix": "dma", "body": "DriveMapAdd(${1})" },
  "dmd": { "prefix": "dmd", "body": "DriveMapDel(${1})" },
  "dmg": { "prefix": "dmg", "body": "DriveMapGet(${1})" },
  "dr": { "prefix": "dr", "body": "DirRemove(${1})" },
  "ds": { "prefix": "ds", "body": "DriveStatus(${1})" },
  "dsf": { "prefix": "dsf", "body": "DriveSpaceFree(${1})" },
  "dsl": { "prefix": "dsl", "body": "DriveSetLabel(${1})" },
  "dst": { "prefix": "dst", "body": "DriveSpaceTotal(${1})" },
  "eg": { "prefix": "eg", "body": "EnvGet(${1})" },
  "es": { "prefix": "es", "body": "EnvSet(${1})" },
  "eu": { "prefix": "eu", "body": "EnvUpdate()\r" },
  "exec": { "prefix": "exec", "body": "Execute(${1})" },
  "fcd": { "prefix": "fcd", "body": "FileChangeDir(${1})" },
  "fcl": { "prefix": "fcl", "body": "FileClose(${1})" },
  "fcnl": { "prefix": "fcnl", "body": "FileCreateNTFSLink(${1})" },
  "fco": { "prefix": "fco", "body": "FileCopy(${1})" },
  "fcs": { "prefix": "fcs", "body": "FileCreateShortcut(${1})" },
  "fd": { "prefix": "fd", "body": "FileDelete(${1})" },
  "fe": { "prefix": "fe", "body": "FileExists(${1})" },
  "ffff": { "prefix": "ffff", "body": "FileFindFirstFile(${1})" },
  "ffnf": { "prefix": "ffnf", "body": "FileFindNextFile(${1})" },
  "fga": { "prefix": "fga", "body": "FileGetAttrib(${1})" },
  "fgln": { "prefix": "fgln", "body": "FileGetLongName(${1})" },
  "fgsh": { "prefix": "fgsh", "body": "FileGetShortcut(${1})" },
  "fgsi": { "prefix": "fgsi", "body": "FileGetSize(${1})" },
  "fgsn": { "prefix": "fgsn", "body": "FileGetShortName(${1})" },
  "fgt": { "prefix": "fgt", "body": "FileGetTime(${1})" },
  "fgv": { "prefix": "fgv", "body": "FileGetVersion(${1})" },
  "fi": { "prefix": "fi", "body": "FileInstall(${1})" },
  "flo": { "prefix": "flo", "body": "Floor(${1})" },
  "fm": { "prefix": "fm", "body": "FileMove(${1})" },
  "fo": { "prefix": "fo", "body": "FileOpen(${1})" },
  "fod": { "prefix": "fod", "body": "FileOpenDialog(${1})" },
  "fr": { "prefix": "fr", "body": "FileRead(${1})" },
  "fread": {
    "prefix": "fread",
    "body": [
      "Local \\$hFile = FileOpen('${1}', \\$FO_READ + \\$FO_UTF8_NOBOM)",
      "Local \\$sFileContent = FileRead(\\$hFile)",
      "FileClose(\\$hFile)"
    ]
  },
  "freadb": {
    "prefix": "freadb",
    "body": [
      "Local \\$hFile = FileOpen('${1}', \\$FO_READ + \\$FO_UTF8_NOBOM + \\$FO_BINARY)",
      "Local \\$dFileContent = FileRead(\\$hFile)",
      "FileClose(\\$hFile)"
    ]
  },
  "frc": { "prefix": "frc", "body": "FileRecycle(${1})" },
  "frce": { "prefix": "frce", "body": "FileRecycleEmpty(${1})" },
  "frl": { "prefix": "frl", "body": "FileReadLine(${1})" },
  "fsa": { "prefix": "fsa", "body": "FileSetAttrib(${1})" },
  "fsd": { "prefix": "fsd", "body": "FileSaveDialog(${1})" },
  "fsf": { "prefix": "fsf", "body": "FileSelectFolder(${1})" },
  "fsp": { "prefix": "fsp", "body": "FtpSetProxy(${1})" },
  "fst": { "prefix": "fst", "body": "FileSetTime(${1})" },
  "fw": { "prefix": "fw", "body": "FileWrite(${1})" },
  "fwl": { "prefix": "fwl", "body": "FileWriteLine(${1})" },
  "fwrite": {
    "prefix": "fwrite",
    "body": [
      "Local \\$sContentToWrite = ''",
      "Local \\$hFile = FileOpen('${1}', \\$FO_OVERWRITE + \\$FO_UTF8_NOBOM)",
      "FileWrite(\\$hFile, \\$sContentToWrite)",
      "FileClose(\\$hFile)"
    ]
  },
  "fwriteb": {
    "prefix": "fwriteb",
    "body": [
      "Local \\$sContentToWrite = ''",
      "Local \\$hFile = FileOpen('${1}', \\$FO_OVERWRITE + \\$FO_UTF8_NOBOM + \\$FO_BINARY)",
      "FileWrite(\\$hFile, \\$sContentToWrite)",
      "FileClose(\\$hFile)"
    ]
  },
  "gc": { "prefix": "gc", "body": "GUICreate(${1})" },
  "gcca": { "prefix": "gcca", "body": "GUICtrlCreateAvi(${1})" },
  "gccb": { "prefix": "gccb", "body": "GUICtrlCreateButton(${1})" },
  "gcccb": { "prefix": "gcccb", "body": "GUICtrlCreateCheckbox(${1})" },
  "gcccm": { "prefix": "gcccm", "body": "GUICtrlCreateContextMenu(${1})" },
  "gccda": { "prefix": "gccda", "body": "GUICtrlCreateDate(${1})" },
  "gccdu": { "prefix": "gccdu", "body": "GUICtrlCreateDummy()\r" },
  "gcce": { "prefix": "gcce", "body": "GUICtrlCreateEdit(${1})" },
  "gccg": { "prefix": "gccg", "body": "GUICtrlCreateGroup(${1})" },
  "gccgc": { "prefix": "gccgc", "body": "GUICtrlCreateGroup('', -99, -99, 1, 1) ; Close group.\r" },
  "gccgr": { "prefix": "gccgr", "body": "GUICtrlCreateGraphic(${1})" },
  "gcci": { "prefix": "gcci", "body": "GUICtrlCreateInput(${1})" },
  "gccico": { "prefix": "gccico", "body": "GUICtrlCreateIcon(${1})" },
  "gccla": { "prefix": "gccla", "body": "GUICtrlCreateLabel(${1})" },
  "gccli": { "prefix": "gccli", "body": "GUICtrlCreateList(${1})" },
  "gccm": { "prefix": "gccm", "body": "GUICtrlCreateMenu(${1})" },
  "gccmc": { "prefix": "gccmc", "body": "GUICtrlCreateMonthCal(${1})" },
  "gccmi": { "prefix": "gccmi", "body": "GUICtrlCreateMenuItem(${1})" },
  "gccco": { "prefix": "gccco", "body": "GUICtrlCreateCombo(${1})" },
  "gcco": { "prefix": "gcco", "body": "GUICtrlCreateObj(${1})" },
  "gccpi": { "prefix": "gccpi", "body": "GUICtrlCreatePic(${1})" },
  "gccpr": { "prefix": "gccpr", "body": "GUICtrlCreateProgress(${1})" },
  "gccr": { "prefix": "gccr", "body": "GUICtrlCreateRadio(${1})" },
  "gccs": { "prefix": "gccs", "body": "GUICtrlCreateSlider(${1})" },
  "gcct": { "prefix": "gcct", "body": "GUICtrlCreateTab(${1})" },
  "gccti": { "prefix": "gccti", "body": "GUICtrlCreateTabItem(${1})" },
  "gcctic": { "prefix": "gcctic", "body": "GUICtrlCreateTabItem('') ; Close tabitem.\r" },
  "gcctv": { "prefix": "gcctv", "body": "GUICtrlCreateTreeView(${1})" },
  "gcctvi": { "prefix": "gcctvi", "body": "GUICtrlCreateTreeViewItem(${1})" },
  "gccu": { "prefix": "gccu", "body": "GUICtrlCreateUpdown(${1})" },
  "gcd": { "prefix": "gcd", "body": "GUICtrlDelete(${1})" },
  "gcgh": { "prefix": "gcgh", "body": "GUICtrlGetHandle(${1})" },
  "gcgs": { "prefix": "gcgs", "body": "GUICtrlGetState(${1})" },
  "gcr": { "prefix": "gcr", "body": "GUICtrlRead(${1})" },
  "gcrlvs": { "prefix": "gcrlvs", "body": "GUICtrlRegisterListViewSort(${1})" },
  "gcrm": { "prefix": "gcrm", "body": "GUICtrlRecvMsg(${1})" },
  "gcsbc": { "prefix": "gcsbc", "body": "GUICtrlSetBkColor(${1})" },
  "gcsco": { "prefix": "gcsco", "body": "GUICtrlSetColor(${1})" },
  "gcscu": { "prefix": "gcscu", "body": "GUICtrlSetCursor(${1})" },
  "gcsd": { "prefix": "gcsd", "body": "GUICtrlSetData(${1})" },
  "gcsf": { "prefix": "gcsf", "body": "GUICtrlSetFont(${1})" },
  "gcsgr": { "prefix": "gcsgr", "body": "GUICtrlSetGraphic(${1})" },
  "gcsi": { "prefix": "gcsi", "body": "GUICtrlSetImage(${1})" },
  "gcsl": { "prefix": "gcsl", "body": "GUICtrlSetLimit(${1})" },
  "gcsm": { "prefix": "gcsm", "body": "GUICtrlSendMsg(${1})" },
  "gcsoe": { "prefix": "gcsoe", "body": "GUICtrlSetOnEvent(${1})" },
  "gcsp": { "prefix": "gcsp", "body": "GUICtrlSetPos(${1})" },
  "gcsr": { "prefix": "gcsr", "body": "GUICtrlSetResizing(${1})" },
  "gcss": { "prefix": "gcss", "body": "GUICtrlSetState(${1})" },
  "gcsst": { "prefix": "gcsst", "body": "GUICtrlSetStyle(${1})" },
  "gcst": { "prefix": "gcst", "body": "GUICtrlSetTip(${1})" },
  "gcstd": { "prefix": "gcstd", "body": "GUICtrlSendToDummy(${1})" },
  "gd": { "prefix": "gd", "body": "GUIDelete(${1})" },
  "ggci": { "prefix": "ggci", "body": "GUIGetCursorInfo(${1})" },
  "ggm": { "prefix": "ggm", "body": "GUIGetMsg(${1})" },
  "grm": { "prefix": "grm", "body": "GUIRegisterMsg(${1})" },
  "gs": { "prefix": "gs", "body": "GUISwitch(${1})" },
  "gsa": { "prefix": "gsa", "body": "GUISetAccelerators(${1})" },
  "gsbc": { "prefix": "gsbc", "body": "GUISetBkColor(${1})" },
  "gsc": { "prefix": "gsc", "body": "GUISetCoord(${1})" },
  "gscu": { "prefix": "gscu", "body": "GUISetCursor(${1})" },
  "gsf": { "prefix": "gsf", "body": "GUISetFont(${1})" },
  "gsg": { "prefix": "gsg", "body": "GUIStartgroup(${1})" },
  "gsh": { "prefix": "gsh", "body": "GUISetHelp(${1})" },
  "gsi": { "prefix": "gsi", "body": "GUISetIcon(${1})" },
  "gsoe": { "prefix": "gsoe", "body": "GUISetOnEvent(${1})" },
  "gss": { "prefix": "gss", "body": "GUISetState(${1})" },
  "gsw": { "prefix": "gsw", "body": "GUISwitch(${1})" },
  "hks": { "prefix": "hks", "body": "HotKeySet(${1})" },
  "hsp": { "prefix": "hsp", "body": "httpSetProxy(${1})" },
  "ib": { "prefix": "ib", "body": "InputBox(${1})" },
  "id": { "prefix": "id", "body": "IniDelete(${1})" },
  "ic": { "prefix": "ic", "body": "InetClose(${1})" },
  "ig": { "prefix": "ig", "body": "InetGet(${1})" },
  "igi": { "prefix": "igi", "body": "InetGetInfo(${1})" },
  "igs": { "prefix": "igs", "body": "InetGetSize(${1})" },
  "ir": { "prefix": "ir", "body": "IniRead(${1})" },
  "irs": { "prefix": "irs", "body": "IniReadSection(${1})" },
  "irsn": { "prefix": "irsn", "body": "IniReadSectionNames(${1})" },
  "isad": { "prefix": "isad", "body": "IsAdmin()\r" },
  "isar": { "prefix": "isar", "body": "IsArray(${1})" },
  "isbin": { "prefix": "isbin", "body": "IsBinary(${1})" },
  "isbo": { "prefix": "isbo", "body": "IsBool(${1})" },
  "isd": { "prefix": "isd", "body": "IsDeclared(${1})" },
  "isdll": { "prefix": "isdll", "body": "IsDllStruct(${1})" },
  "isf": { "prefix": "isf", "body": "IsFloat(${1})" },
  "isfn": { "prefix": "isfn", "body": "IsFunc(${1})" },
  "ishw": { "prefix": "ishw", "body": "IsHWnd(${1})" },
  "isi": { "prefix": "isi", "body": "IsInt(${1})" },
  "isk": { "prefix": "isk", "body": "IsKeyword(${1})" },
  "ism": { "prefix": "ism", "body": "IsMap(${1})" },
  "isn": { "prefix": "isn", "body": "IsNumber(${1})" },
  "iso": { "prefix": "iso", "body": "IsObj(${1})" },
  "isp": { "prefix": "isp", "body": "IsPtr(${1})" },
  "iss": { "prefix": "iss", "body": "IsString(${1})" },
  "iw": { "prefix": "iw", "body": "IniWrite(${1})" },
  "iws": { "prefix": "iws", "body": "IniWriteSection(${1})" },
  "mb": { "prefix": "mb", "body": "MsgBox(${1})" },
  "mc": { "prefix": "mc", "body": "MouseClick(${1})" },
  "mcd": { "prefix": "mcd", "body": "MouseClickDrag(${1})" },
  "md": { "prefix": "md", "body": "MouseDown(${1})" },
  "mgc": { "prefix": "mgc", "body": "MouseGetCursor()\r" },
  "mgp": { "prefix": "mgp", "body": "MouseGetPos()\r" },
  "mgs": { "prefix": "mgs", "body": "MemGetStats()\r" },
  "mm": { "prefix": "mm", "body": "MouseMove(${1})" },
  "mu": { "prefix": "mu", "body": "MouseUp(${1})" },
  "mw": { "prefix": "mw", "body": "MouseWheel(${1})" },
  "num": { "prefix": "num", "body": "Number(${1})" },
  "oae": { "prefix": "oae", "body": "OnAutoItExit()\r" },
  "oas": { "prefix": "oas", "body": "OnAutoItStart()\r" },
  "oasr": { "prefix": "oasr", "body": "#OnAutoItStartRegister \"${1}\"" },
  "oaer": { "prefix": "oaer", "body": "OnAutoItExitRegister (\"${1}\")" },
  "ocr": { "prefix": "ocr", "body": "ObjCreate(${1})" },
  "oev": { "prefix": "oev", "body": "ObjEvent(${1})" },
  "oge": { "prefix": "oge", "body": "ObjGet(${1})" },
  "pc": { "prefix": "pc", "body": "ProcessClose(${1})" },
  "pcs": { "prefix": "pcs", "body": "PixelChecksum(${1})" },
  "pe": { "prefix": "pe", "body": "ProcessExists(${1})" },
  "pgc": { "prefix": "pgc", "body": "PixelGetColor(${1})" },
  "pl": { "prefix": "pl", "body": "ProcessList(${1})" },
  "poff": { "prefix": "poff", "body": "ProgressOff()\r" },
  "pon": { "prefix": "pon", "body": "ProgressOn(${1})" },
  "ps": { "prefix": "ps", "body": "PixelSearch(${1})" },
  "pset": { "prefix": "pset", "body": "ProgressSet(${1})" },
  "psp": { "prefix": "psp", "body": "ProcessSetPriority(${1})" },
  "pw": { "prefix": "pw", "body": "ProcessWait(${1})" },
  "pwc": { "prefix": "pwc", "body": "ProcessWaitClose(${1})" },
  "ra": { "prefix": "ra", "body": "RunAs(${1})" },
  "raw": { "prefix": "raw", "body": "RunAsWait(${1})" },
  "rd": { "prefix": "rd", "body": "RegDelete(${1})" },
  "rdm": { "prefix": "rdm", "body": "Random(${1})" },
  "rek": { "prefix": "rek", "body": "RegEnumKey(${1})" },
  "rev": { "prefix": "rev", "body": "RegEnumVal(${1})" },
  "rnd": { "prefix": "rnd", "body": "Round(${1})" },
  "rr": { "prefix": "rr", "body": "RegRead(${1})" },
  "rwa": { "prefix": "rwa", "body": "RunWait(${1})" },
  "rwr": { "prefix": "rwr", "body": "RegWrite(${1})" },
  "sacr": { "prefix": "sacr", "body": "StringAddCR(${1})" },
  "sbgt": { "prefix": "sbgt", "body": "StatusbarGetText(${1})" },
  "sco": { "prefix": "sco", "body": "StringCompare(${1})" },
  "sd": { "prefix": "sd", "body": "Shutdown(${1})" },
  "se": { "prefix": "se", "body": "SetError(${1})" },
  "ser": { "prefix": "ser", "body": "StdErrRead(${1})" },
  "sex": { "prefix": "sex", "body": "SetExtended(${1})" },
  "sexec": { "prefix": "sexec", "body": "ShellExecute(${1})" },
  "sexecw": { "prefix": "sexecw", "body": "ShellExecuteWait(${1})" },
  "sf": { "prefix": "sf", "body": "StringFormat(${1})" },
  "sia": { "prefix": "sia", "body": "StringIsAlpha(${1})" },
  "sian": { "prefix": "sian", "body": "StringIsAlNum(${1})" },
  "siascii": { "prefix": "siascii", "body": "StringIsASCII(${1})" },
  "sid": { "prefix": "sid", "body": "StringIsDigit(${1})" },
  "sif": { "prefix": "sif", "body": "StringIsFloat(${1})" },
  "sii": { "prefix": "sii", "body": "StringIsInt(${1})" },
  "sil": { "prefix": "sil", "body": "StringIsLower(${1})" },
  "sio": { "prefix": "sio", "body": "SplashImageOn(${1})" },
  "sioc": { "prefix": "sioc", "body": "StdioClose(${1})" },
  "sis": { "prefix": "sis", "body": "StringInStr(${1})" },
  "sisp": { "prefix": "sisp", "body": "StringIsSpace(${1})" },
  "siu": { "prefix": "siu", "body": "StringIsUpper(${1})" },
  "siw": { "prefix": "siw", "body": "StdinWrite(${1})" },
  "sixd": { "prefix": "sixd", "body": "StringIsXDigit(${1})" },
  "ska": { "prefix": "ska", "body": "SendKeepActive(${1})" },
  "sl": { "prefix": "sl", "body": "StringLeft(${1})" },
  "slen": { "prefix": "slen", "body": "StringLen(${1})" },
  "slower": { "prefix": "slower", "body": "StringLower(${1})" },
  "slp": { "prefix": "slp", "body": "Sleep(${1})" },
  "sm": { "prefix": "sm", "body": "StringMid(${1})" },
  "so": { "prefix": "so", "body": "SplashOff()\r" },
  "sor": { "prefix": "sor", "body": "StdoutRead(${1})" },
  "sp": { "prefix": "sp", "body": "SoundPlay(${1})" },
  "sr": { "prefix": "sr", "body": "StringRight(${1})" },
  "srep": { "prefix": "srep", "body": "StringReplace(${1})" },
  "srex": { "prefix": "srex", "body": "StringRegExp(${1})" },
  "srexr": { "prefix": "srexr", "body": "StringRegExpReplace(${1})" },
  "ss": { "prefix": "ss", "body": "StringSplit(${1})" },
  "sscr": { "prefix": "sscr", "body": "StringStripCR(${1})" },
  "ssws": { "prefix": "ssws", "body": "StringStripWS(${1})" },
  "sswv": { "prefix": "sswv", "body": "SoundSetWaveVolume(${1})" },
  "stbin": { "prefix": "stbin", "body": "StringToBinary(${1})" },
  "stl": { "prefix": "stl", "body": "StringTrimLeft(${1})" },
  "sto": { "prefix": "sto", "body": "SplashTextOn(${1})" },
  "str": { "prefix": "str", "body": "StringTrimRight(${1})" },
  "stri": { "prefix": "stri", "body": "String(${1})" },
  "supper": { "prefix": "supper", "body": "StringUpper(${1})" },
  "tci": { "prefix": "tci", "body": "TrayCreateItem(${1})" },
  "tcm": { "prefix": "tcm", "body": "TrayCreateMenu(${1})" },
  "tcpa": { "prefix": "tcpa", "body": "TCPAccept(${1})" },
  "tcpc": { "prefix": "tcpc", "body": "TCPConnect(${1})" },
  "tcpcs": { "prefix": "tcpcs", "body": "TCPCloseSocket(${1})" },
  "tcpl": { "prefix": "tcpl", "body": "TCPListen(${1})" },
  "tcpntip": { "prefix": "tcpntip", "body": "TCPNameToIP(${1})" },
  "tcpr": { "prefix": "tcpr", "body": "TCPRecv(${1})" },
  "tcps": { "prefix": "tcps", "body": "TCPSend(${1})" },
  "tcpsd": { "prefix": "tcpsd", "body": "TCPShutdown()\r" },
  "tcpsu": { "prefix": "tcpsu", "body": "TCPStartup()\r" },
  "td": { "prefix": "td", "body": "TimerDiff(${1})" },
  "tgm": { "prefix": "tgm", "body": "TrayGetMsg()\r" },
  "ti": { "prefix": "ti", "body": "TimerInit()\r" },
  "tid": { "prefix": "tid", "body": "TrayItemDelete(${1})" },
  "tigh": { "prefix": "tigh", "body": "TrayItemGetHandle(${1})" },
  "tigs": { "prefix": "tigs", "body": "TrayItemGetState(${1})" },
  "tigt": { "prefix": "tigt", "body": "TrayItemGetText(${1})" },
  "tisoe": { "prefix": "tisoe", "body": "TrayItemSetOnEvent(${1})" },
  "tiss": { "prefix": "tiss", "body": "TrayItemSetState(${1})" },
  "tist": { "prefix": "tist", "body": "TrayItemSetText(${1})" },
  "toolt": { "prefix": "toolt", "body": "ToolTip(${1})" },
  "tsc": { "prefix": "tsc", "body": "TraySetClick(${1})" },
  "tsi": { "prefix": "tsi", "body": "TraySetIcon(${1})" },
  "tsoe": { "prefix": "tsoe", "body": "TraySetOnEvent(${1})" },
  "tspi": { "prefix": "tspi", "body": "TraySetPauseIcon(${1})" },
  "tss": { "prefix": "tss", "body": "TraySetState(${1})" },
  "tstt": { "prefix": "tstt", "body": "TraySetToolTip(${1})" },
  "tt": { "prefix": "tt", "body": "TrayTip(${1})" },
  "ub": { "prefix": "ub", "body": "UBound(${1})" },
  "udpb": { "prefix": "udpb", "body": "UDPBind(${1})" },
  "udpcs": { "prefix": "udpcs", "body": "UDPCloseSocket(${1})" },
  "udpo": { "prefix": "udpo", "body": "UDPOpen(${1})" },
  "udpr": { "prefix": "udpr", "body": "UDPRecv(${1})" },
  "udpsd": { "prefix": "udpsd", "body": "UDPShutdown()\r" },
  "udpsu": { "prefix": "udpsu", "body": "UDPStartup()\r" },
  "wa": { "prefix": "wa", "body": "WinActive(${1})" },
  "wat": { "prefix": "wat", "body": "WinActivate(${1})" },
  "wc": { "prefix": "wc", "body": "WinClose(${1})" },
  "we": { "prefix": "we", "body": "WinExists(${1})" },
  "wf": { "prefix": "wf", "body": "WinFlash(${1})" },
  "wgcl": { "prefix": "wgcl", "body": "WinGetClassList(${1})" },
  "wgcp": { "prefix": "wgcp", "body": "WinGetCaretPos()\r" },
  "wgcs": { "prefix": "wgcs", "body": "WinGetClientSize(${1})" },
  "wgh": { "prefix": "wgh", "body": "WinGetHandle(${1})" },
  "wgpo": { "prefix": "wgpo", "body": "WinGetPos(${1})" },
  "wgpr": { "prefix": "wgpr", "body": "WinGetProcess(${1})" },
  "wgs": { "prefix": "wgs", "body": "WinGetState(${1})" },
  "wgte": { "prefix": "wgte", "body": "WinGetText(${1})" },
  "wgti": { "prefix": "wgti", "body": "WinGetTitle(${1})" },
  "wk": { "prefix": "wk", "body": "WinKill(${1})" },
  "wl": { "prefix": "wl", "body": "WinList(${1})" },
  "wm": { "prefix": "wm", "body": "WinMove(${1})" },
  "wma": { "prefix": "wma", "body": "WinMinimizeAll()\r" },
  "wmau": { "prefix": "wmau", "body": "WinMinimizeAllUndo()\r" },
  "wmsi": { "prefix": "wmsi", "body": "WinMenuSelectItem(${1})" },
  "wsot": { "prefix": "wsot", "body": "WinSetOnTop(${1})" },
  "wss": { "prefix": "wss", "body": "WinSetState(${1})" },
  "wst": { "prefix": "wst", "body": "WinSetTitle(${1})" },
  "wstr": { "prefix": "wstr", "body": "WinSetTrans(${1})" },
  "ww": { "prefix": "ww", "body": "WinWait(${1})" },
  "wwa": { "prefix": "wwa", "body": "WinWaitActive(${1})" },
  "wwc": { "prefix": "wwc", "body": "WinWaitClose(${1})" },
  "wwna": { "prefix": "wwna", "body": "WinWaitNotActive(${1})" },
  "au3check": {
    "prefix": "au3check",
    "body": "C:\\Program Files (x86)\\Autoit3\\Au3Check.exe"
  },
  "autoit3": {
    "prefix": "autoit3",
    "body": "C:\\Program Files (x86)\\Autoit3\\AutoIt3.exe"
  },
  "aut2exe": {
    "prefix": "aut2exe",
    "body": "C:\\Program Files (x86)\\AutoIt3\\Aut2Exe\\Aut2Exe.exe"
  },
  "datbeta": {
    "prefix": "datbeta",
    "body": "C:\\Program Files (x86)\\AutoIt3\\Beta\\au3check.dat"
  },
  "datfinal": {
    "prefix": "datfinal",
    "body": "C:\\Program Files (x86)\\AutoIt3\\au3check.dat"
  },
  "icon": {
    "prefix": "icon",
    "body": "C:\\Program Files (x86)\\AutoIt3\\Aut2Exe\\Icons\\\\${1}.ico"
  },
  "scite": {
    "prefix": "scite",
    "body": "C:\\Program Files (x86)\\Autoit3\\SciTe\\SciTe.exe"
  },
  "version": {
    "prefix": "version",
    "body": "ConsoleWrite(\"- \" & @ScriptLineNumber & ' - ' & @AutoItExe & ' (' & @AutoItVersion & '...' & FileGetTime(@AutoItExe, 0, 1) & ')' & @CRLF)"
  },
  "autoit3dir": {
    "prefix": "autoit3dir",
    "body": "C:\\Program Files (x86)\\Autoit3\\"
  },
  "aut2exedir": {
    "prefix": "aut2exedir",
    "body": "C:\\Program Files (x86)\\AutoIt3\\Aut2Exe\\"
  },
  "icondir": {
    "prefix": "icondir",
    "body": "C:\\Program Files (x86)\\AutoIt3\\Aut2Exe\\Icons\\"
  },
  "includedir": {
    "prefix": "includedir",
    "body": "C:\\Program Files (x86)\\AutoIt3\\Include\\"
  },
  "scitedir": {
    "prefix": "scitedir",
    "body": "C:\\Program Files (x86)\\AutoIt3\\SciTe\\"
  },
  "HKCR": { "prefix": "HKCR", "body": "HKEY_CLASSES_ROOT" },
  "HKCU": { "prefix": "HKCU", "body": "HKEY_CURRENT_USER" },
  "HKLM": { "prefix": "HKLM", "body": "HKEY_LOCAL_MACHINE" },
  "HKU": { "prefix": "HKU", "body": "HKEY_USERS" },
  "HKCC": { "prefix": "HKCC", "body": "HKEY_CURRENT_CONFIG" },
  "but": { "prefix": "but", "body": "\\$idButton_${1}" },
  "chk": { "prefix": "chk", "body": "\\$idCheckbox_${1}" },
  "dat": { "prefix": "dat", "body": "\\$idDate_${1}" },
  "edt": { "prefix": "edt", "body": "\\$idEdit_${1}" },
  "inp": { "prefix": "inp", "body": "\\$idInput_${1}" },
  "lbl": { "prefix": "lbl", "body": "\\$idLabel_${1}" },
  "lvw": { "prefix": "lvw", "body": "\\$idListView_${1}" },
  "men": { "prefix": "men", "body": "\\$idMenu_${1}" },
  "prg": { "prefix": "prg", "body": "\\$idProgressbar_${1}" },
  "rad": { "prefix": "rad", "body": "\\$idRadio_${1}" },
  "sld": { "prefix": "sld", "body": "\\$idSlider_${1}" },
  "tab": { "prefix": "tab", "body": "\\$idTab_${1}" },
  "trv": { "prefix": "trv", "body": "\\$idTreeview_${1}" },
  "item": { "prefix": "item", "body": "\\$item_${1}" },
  "trayi": { "prefix": "trayi", "body": "\\$idTrayItem_${1}" },
  "traym": { "prefix": "traym", "body": "\\$idTrayMenu_${1}" },
  "hnd": { "prefix": "hnd", "body": "\\$handle_${1}" },
  "regkey": { "prefix": "regkey", "body": "\\$registry_Key" },
  "regval": { "prefix": "regval", "body": "\\$registry_Value" },
  "regdat": { "prefix": "regdat", "body": "\\$registry_Data" },
  "error": { "prefix": "error", "body": "\\$error ${1}" },
  "errval": { "prefix": "errval", "body": "\\$iErrorValue = @error\r" },
  "extval": { "prefix": "extval", "body": "\\$iExtendedValue = @extended\r" },
  "retval": { "prefix": "retval", "body": "\\$Result = " },
  "iretval": { "prefix": "iretval", "body": "\\$iResult = " },
  "aretval": { "prefix": "aretval", "body": "\\$aResult = " },
  "bretval": { "prefix": "bretval", "body": "\\$bResult = " },
  "dretval": { "prefix": "dretval", "body": "\\$dResult = " },
  "vretval": { "prefix": "vretval", "body": "\\$vResult = " },
  "result": { "prefix": "result", "body": "\\$result = " },
  "gchecked": { "prefix": "gchecked", "body": "\\$GUI_CHECKED" },
  "gunchecked": { "prefix": "gunchecked", "body": "\\$GUI_UNCHECKED" },
  "genable": { "prefix": "genable", "body": "\\$GUI_ENABLE" },
  "gdisable": { "prefix": "gdisable", "body": "\\$GUI_DISABLE" },
  "ghide": { "prefix": "ghide", "body": "\\$GUI_HIDE" },
  "gshow": { "prefix": "gshow", "body": "\\$GUI_SHOW" },
  "gfocus": { "prefix": "gfocus", "body": "\\$GUI_FOCUS" },
  "eclose": { "prefix": "eclose", "body": "\\$GUI_EVENT_CLOSE" },
  "emin": { "prefix": "emin", "body": "\\$GUI_EVENT_MINIMIZE" },
  "erestore": { "prefix": "erestore", "body": "\\$GUI_EVENT_RESTORE" },
  "emax": { "prefix": "emax", "body": "\\$GUI_EVENT_MAXIMIZE" },
  "cmd": { "prefix": "cmd", "body": "RunWait('\"' & @ComSpec & '\" /c ${1}', '', @SW_HIDE)" },
  "cmd2": { "prefix": "cmd2", "body": "RunWait('\"' & @ComSpec & '\" /c ' & ${1}, '', @SW_HIDE)" },
  "slp0": { "prefix": "slp0", "body": "Sleep(10)\r" },
  "slp1": { "prefix": "slp1", "body": "Sleep(1000)\r" },
  "slp2": { "prefix": "slp2", "body": "Sleep(2000)\r" },
  "slp3": { "prefix": "slp3", "body": "Sleep(3000)\r" },
  "slp4": { "prefix": "slp4", "body": "Sleep(4000)\r" },
  "slp5": { "prefix": "slp5", "body": "Sleep(5000)\r" },
  "gcc": { "prefix": "gcc", "body": "GUICtrlCreate" },
  "gcs": { "prefix": "gcs", "body": "GUICtrlSet" },
  "cr1": { "prefix": "cr1", "body": "& @CRLF " },
  "cr2": { "prefix": "cr2", "body": "& @CRLF & @CRLF " },
  "cr3": { "prefix": "cr3", "body": "& @CRLF & @CRLF & @CRLF " },
  "cr4": { "prefix": "cr4", "body": "& @CRLF & @CRLF & @CRLF & @CRLF " },
  "cr5": { "prefix": "cr5", "body": "& @CRLF & @CRLF & @CRLF & @CRLF & @CRLF" },
  "cont1": { "prefix": "cont1", "body": "& @CRLF & _\r'${1}'" },
  "cont11": {
    "prefix": "cont11",
    "body": ["& @CRLF & _", "'${1}'& @CRLF & _", "''"]
  },
  "cont111": {
    "prefix": "cont111",
    "body": ["& @CRLF & _", "'${1}'& @CRLF & _", "''& @CRLF & _", "''"]
  },
  "cont2": { "prefix": "cont2", "body": "& @CRLF & _\r\"${1}\"" },
  "cont22": {
    "prefix": "cont22",
    "body": ["& @CRLF & _", "\"${1}\"& @CRLF & _", "\"\""]
  },
  "cont222": {
    "prefix": "cont222",
    "body": ["& @CRLF & _", "\"${1}\"& @CRLF & _", "\"\"& @CRLF & _", "\"\""]
  },
  "tab1": { "prefix": "tab1", "body": "& @TAB " },
  "tab2": { "prefix": "tab2", "body": "& @TAB & @TAB " },
  "tab3": { "prefix": "tab3", "body": "& @TAB & @TAB & @TAB " },
  "tab4": { "prefix": "tab4", "body": "& @TAB & @TAB & @TAB & @TAB " },
  "tab5": { "prefix": "tab5", "body": "& @TAB & @TAB & @TAB & @TAB & @TAB " },
  "lf1": { "prefix": "lf1", "body": "& @LF " },
  "lf2": { "prefix": "lf2", "body": "& @LF & @LF " },
  "lf3": { "prefix": "lf3", "body": "& @LF & @LF & @LF " },
  "lf4": { "prefix": "lf4", "body": "& @LF & @LF & @LF & @LF " },
  "lf5": { "prefix": "lf5", "body": "& @LF & @LF & @LF & @LF & @LF " },
  "cc": { "prefix": "cc", "body": "ContinueCase\r" },
  "cl": { "prefix": "cl", "body": "ContinueLoop\r" },
  "el": { "prefix": "el", "body": "ExitLoop\r" },
  "err": { "prefix": "err", "body": "@error " },
  "ext": { "prefix": "ext", "body": "@extended " },
  "include": { "prefix": "include", "body": "#include <${1}>" },
  "incl": { "prefix": "incl", "body": "#include <${1}>" },
  "incll": { "prefix": "incll", "body": "#include \"${1}.au3\"" },
  "includeonce": { "prefix": "includeonce", "body": "#include-once\r" },
  "incl1": { "prefix": "incl1", "body": "#include-once\r" },
  "prag": { "prefix": "prag", "body": "#pragma compile(${1},)" },
  "reg": { "prefix": "reg", "body": "#Region - " },
  "reg2": { "prefix": "reg2", "body": "#Region - ${1}\r#EndRegion" },
  "ereg": { "prefix": "ereg", "body": "#EndRegion\r" },
  "nti": { "prefix": "nti", "body": "#NoTrayIcon\r" },
  "iferrset": {
    "prefix": "iferrset",
    "body": "If @error Then Return SetError(@error, @extended, ${1})"
  },
  "iferrset2": {
    "prefix": "iferrset2",
    "body": ["If @error Then", "\tReturn SetError(@error, @extended, ${1})", "Else", "\t", "EndIf"]
  },
  "iferrset3": {
    "prefix": "iferrset3",
    "body": [
      "If @error Then",
      "\tReturn SetError(@error, @extended, ${1})",
      "ElseIf False Then",
      "\t",
      "Else",
      "\t",
      "EndIf"
    ]
  },
  "iferrc": {
    "prefix": "iferrc",
    "body": [
      "If @error Then ConsoleWrite(\"! ---> @error=\" & @error & \" @extended=\" & @extended & _",
      "\t\" : ${1}\" & @CRLF)"
    ]
  },
  "ifextc": {
    "prefix": "ifextc",
    "body": [
      "If @extended Then ConsoleWrite(\"! ---> @error=\" & @error & \" @extended=\" & @extended & _",
      "\t\" : ${1}\" & @CRLF)"
    ]
  },
  "iferrcln": {
    "prefix": "iferrcln",
    "body": [
      "If @error Then ConsoleWrite(\"! ---> @error=\" & @error & \" @extended=\" & @extended & \" @ScriptLineNumber=\" & @ScriptLineNumber & _",
      "\t\" : ${1}\" & @CRLF)"
    ]
  },
  "ifextcln": {
    "prefix": "ifextcln",
    "body": [
      "If @extended Then ConsoleWrite(\"! ---> @error=\" & @error & \" @extended=\" & @extended & \" @ScriptLineNumber=\" & @ScriptLineNumber & _",
      "\t\" : ${1}\" & @CRLF)"
    ]
  },
  "iferrmsg": {
    "prefix": "iferrmsg",
    "body": "If @error Then MsgBox(\\$MB_OK + \\$MB_TOPMOST + \\$MB_ICONERROR, \"${1}\", \"@error = \" & @error & @CRLF & \"@extended = \" & @extended)"
  },
  "iferrmsgln": {
    "prefix": "iferrmsgln",
    "body": "If @error Then MsgBox(\\$MB_OK + \\$MB_TOPMOST + \\$MB_ICONERROR, \"${1}\", \"@error = \" & @error & @CRLF & \"@extended = \" & @extended & \"@ScriptLineNumber=\" & @ScriptLineNumber)"
  },
  "iferrmsg2": {
    "prefix": "iferrmsg2",
    "body": [
      "If @error Then MsgBox(\\$MB_OK + \\$MB_TOPMOST + \\$MB_ICONERROR, \"! Error occurred\", _",
      "\t\"@error = \" & @error & @CRLF & _",
      "\t\"@extended = \" & @extended & @CRLF & _",
      "\t\"\" & @CRLF & _",
      "\t\"${1}\" & @CRLF & _",
      "\t\"\")"
    ]
  },
  "iferrmsg2ln": {
    "prefix": "iferrmsg2ln",
    "body": [
      "If @error Then MsgBox(\\$MB_OK + \\$MB_TOPMOST + \\$MB_ICONERROR, \"! Error occurred\", _",
      "\t\"@error = \" & @error & @CRLF & _",
      "\t\"@extended = \" & @extended & @CRLF & _",
      "\t\"@ScriptLineNumber=\" & @ScriptLineNumber & @CRLF & _",
      "\t\"\" & @CRLF & _",
      "\t\"${1}\" & @CRLF & _",
      "\t\"\")"
    ]
  },
  "retseterr": { "prefix": "retseterr", "body": "Return SetError(@error, @extended, ${1})" },
  "switcherr": {
    "prefix": "switcherr",
    "body": [
      "Switch @error",
      "\tCase 1",
      "\t\t${1}",
      "\tCase 2",
      "\t\t",
      "\tCase 3",
      "\t\t",
      "\tCase 4",
      "\t\t",
      "\tCase Else",
      "\t\t",
      "EndSwitch"
    ]
  },
  "switchext": {
    "prefix": "switchext",
    "body": [
      "Switch @extended",
      "\tCase 1",
      "\t\t${1}",
      "\tCase 2",
      "\t\t",
      "\tCase 3",
      "\t\t",
      "\tCase 4",
      "\t\t",
      "\tCase Else",
      "\t\t",
      "EndSwitch"
    ]
  },
  "mb2": { "prefix": "mb2", "body": "MsgBox(0, \"\", ${1})" },
  "mbi": {
    "prefix": "mbi",
    "body": "MsgBox(\\$MB_OK + \\$MB_TOPMOST + \\$MB_ICONINFORMATION, \"Information\", \"${1}\")"
  },
  "mbiln": {
    "prefix": "mbiln",
    "body": "MsgBox(\\$MB_OK + \\$MB_TOPMOST + \\$MB_ICONINFORMATION, \"Information #\" & @ScriptLineNumber, \"${1}\")"
  },
  "mbqy": {
    "prefix": "mbqy",
    "body": [
      "If \\$IDYES = MsgBox(\\$MB_YESNO + \\$MB_TOPMOST + \\$MB_ICONQUESTION + \\$MB_DEFBUTTON1, \"Question\", _",
      "\t\"${1} ?\") Then",
      "Else",
      "EndIf"
    ]
  },
  "mbqyln": {
    "prefix": "mbqyln",
    "body": [
      "If \\$IDYES = MsgBox(\\$MB_YESNO + \\$MB_TOPMOST + \\$MB_ICONQUESTION + \\$MB_DEFBUTTON1, \"Question #\" & @ScriptLineNumber, _",
      "\t\"${1} ?\") Then",
      "Else",
      "EndIf"
    ]
  },
  "mbqn": {
    "prefix": "mbqn",
    "body": [
      "If \\$IDNO = MsgBox(\\$MB_YESNO + \\$MB_TOPMOST + \\$MB_ICONQUESTION + \\$MB_DEFBUTTON2, \"Question\", _",
      "\t\"${1} ?\") Then",
      "Else",
      "EndIf"
    ]
  },
  "mbqnln": {
    "prefix": "mbqnln",
    "body": [
      "If \\$IDNO = MsgBox(\\$MB_YESNO + \\$MB_TOPMOST + \\$MB_ICONQUESTION + \\$MB_DEFBUTTON2, \"Question #\" & @ScriptLineNumber, _",
      "\t\"${1} ?\") Then",
      "Else",
      "EndIf"
    ]
  },
  "mbw": {
    "prefix": "mbw",
    "body": "MsgBox(\\$MB_OK + \\$MB_TOPMOST + \\$MB_ICONWARNING, \"Warning\", \"${1}\")"
  },
  "mbwln": {
    "prefix": "mbwln",
    "body": "MsgBox(\\$MB_OK + \\$MB_TOPMOST + \\$MB_ICONWARNING, \"Warning #\" & @ScriptLineNumber, \"${$1}\")"
  },
  "mbw2": {
    "prefix": "mbw2",
    "body": [
      "Switch MsgBox(\\$MB_CANCELTRYCONTINUE + \\$MB_TOPMOST + \\$MB_ICONWARNING + \\$MB_DEFBUTTON3, \"Warning\", _",
      "\t\"${1}\")",
      "Case \\$IDCANCEL",
      "Case \\$IDRETRY",
      "Case \\$IDCONTINUE",
      "EndSwitch"
    ]
  },
  "mbw2ln": {
    "prefix": "mbw2ln",
    "body": [
      "Switch MsgBox(\\$MB_CANCELTRYCONTINUE + \\$MB_TOPMOST + \\$MB_ICONWARNING + \\$MB_DEFBUTTON3, \"Warning #\" & @ScriptLineNumber, _",
      "\t\"${1}\")",
      "Case \\$IDCANCEL",
      "Case \\$IDRETRY",
      "Case \\$IDCONTINUE",
      "EndSwitch"
    ]
  },
  "mbe": {
    "prefix": "mbe",
    "body": [
      "MsgBox(\\$MB_OK + \\$MB_TOPMOST + \\$MB_ICONERROR, \"! Error occurred\", _",
      "\t\"@error = \" & @error & @CRLF & _",
      "\t\"@extended = \" & @extended & @CRLF & _",
      "\t\"${1}\" & @CRLF & _",
      "\t\"\")"
    ]
  },
  "mbeln": {
    "prefix": "mbeln",
    "body": [
      "MsgBox(\\$MB_OK + \\$MB_TOPMOST + \\$MB_ICONERROR, \"! Error occurred #\" & @ScriptLineNumber, _",
      "\t\"@error = \" & @error & @CRLF & _",
      "\t\"@extended = \" & @extended & @CRLF & _",
      "\t\"${1}\" & @CRLF & _",
      "\t\"\")"
    ]
  },
  "mbe2": {
    "prefix": "mbe2",
    "body": [
      "Switch MsgBox(\\$MB_ABORTRETRYIGNORE + \\$MB_TOPMOST + \\$MB_ICONERROR + \\$MB_DEFBUTTON1, \"! Error occurred\", _",
      "\t\"@error = \" & @error & @CRLF & _",
      "\t\"@extended = \" & @extended & @CRLF & _",
      "\t\"${1}\" & @CRLF & _",
      "\t\"\")",
      "Case \\$IDABORT",
      "Case \\$IDRETRY",
      "Case \\$IDIGNORE",
      "EndSwitch"
    ]
  },
  "mbe2ln": {
    "prefix": "mbe2ln",
    "body": [
      "Switch MsgBox(\\$MB_ABORTRETRYIGNORE + \\$MB_TOPMOST + \\$MB_ICONERROR + \\$MB_DEFBUTTON1, \"! Error occurred #\" & @ScriptLineNumber, _",
      "\t\"@error = \" & @error & @CRLF & _",
      "\t\"@extended = \" & @extended & @CRLF & _",
      "\t\"${1}\" & @CRLF & _",
      "\t\"\")",
      "Case \\$IDABORT",
      "Case \\$IDRETRY",
      "Case \\$IDIGNORE",
      "EndSwitch"
    ]
  },
  "ifthen": {
    "prefix": "ifthen",
    "body": ["If ${1} Then", "\t", "EndIf"]
  },
  "ifelse": { "prefix": "ifelse", "body": ["If ${1} Then", "\t", "Else", "\t", "EndIf"] },
  "ifelseif": {
    "prefix": "ifelseif",
    "body": ["If ${1} Then", "\t", "ElseIf False Then", "\t", "Else", "\t", "EndIf"]
  },
  "dountil": {
    "prefix": ["dountil", "dou"],
    "body": ["Do", "\t", "Until ${1}"]
  },
  "fornext": { "prefix": "fornext", "body": ["For \\$i = ${1} To Step 1", "\t", "Next"] },
  "fornext2": { "prefix": "fornext2", "body": ["For \\$iStep_idx = ${1} To Step 1", "\t", "Next"] },
  "for0ubn": { "prefix": "for0ubn", "body": ["For \\$i = 0 To UBound(${1}) -1", "\t", "Next"] },
  "for1ubn": { "prefix": "for1ubn", "body": ["For \\$i = 1 To UBound(${1}) -1", "\t", "Next"] },
  "for1c": { "prefix": "for1c", "body": ["For \\$i = 1 To ${1}[0]", "\t", "Next"] },
  "fun": { "prefix": "fun", "body": ["Func ${1}()", "\t", "EndFunc"] },
  "functions": {
    "prefix": "functions",
    "body": [
      "; Start - Functions\r\r",
      "Func _${1}A()",
      "EndFunc\r\r",
      "Func _B()",
      "EndFunc\r\r",
      "Func _C()",
      "EndFunc\r\r",
      "Func _D()",
      "EndFunc\r\r",
      "Func _E()",
      "EndFunc\r\r",
      "Func _F()",
      "EndFunc\r\r",
      "Func _G()",
      "EndFunc\r\r",
      "Func _H()",
      "EndFunc\r\r",
      "Func _I()",
      "EndFunc\r\r",
      "Func _J()",
      "EndFunc\r\r"
    ]
  },
  "funcont": {
    "prefix": "funcont",
    "body": [
      "Func _${1}__Container(\\$Par = Default, \\$iError = @error, \\$iExtended = @extended)",
      "\tLocal Static \\$Container = Null",
      "\tIf @NumParams = 0 Or \\$Par = Default Then Return SetError(\\$iError, \\$iExtended, \\$Container)",
      "\tLocal \\$Prev = \\$Container",
      "\t\\$Container = \\$Par",
      "\tReturn SetError(\\$iError, \\$iExtended, \\$Prev)",
      "EndFunc ;==>_Storage_"
    ]
  },
  "funex": { "prefix": "funex", "body": ["_Example()", "Func _Example()", "\t", "EndFunc"] },
  "funex123": {
    "prefix": "funex123",
    "body": [
      "_Example_1()",
      "_Example_2()",
      "_Example_3()\r\r",
      "Func _Example_1()",
      "\t${1}",
      "EndFunc\r\r",
      "Func _Example_2()",
      "\t",
      "EndFunc\r\r",
      "Func _Example_3()",
      "\t",
      "EndFunc\r\r"
    ]
  },
  "funwrap": {
    "prefix": "funwrap",
    "body": [
      "Func _${1}__Wrapper(\\$Par, \\$iError = @error, \\$iExtended = @extended)",
      "\t#forceref \\$Par\r\r",
      "\tReturn SetError(\\$iError , \\$iExtended , 1)",
      "EndFunc"
    ]
  },
  "selectcase": {
    "prefix": "selectcase",
    "body": ["Select", "\tCase ${1}", "\tCase ", "\tCase ", "\tCase ", "\tCase Else", "EndSelect"]
  },
  "switchcase": {
    "prefix": "switchcase",
    "body": ["Switch", "\tCase ${1}", "\tCase ", "\tCase ", "\tCase ", "\tCase Else", "EndSwitch"]
  },
  "more": { "prefix": "more", "body": ["${1}", "Case", "Case", "Case", "Case", "Case Else"] },
  "whilew": { "prefix": ["whilew", "whilewend"], "body": ["While ${1}", "WEnd"] },
  "withe": { "prefix": ["withe", "withendwith"], "body": ["With ${1}", "EndWith"] },
  "for0": { "prefix": "for0", "body": "For \\$i = 0 To ${1}" },
  "for0ub": { "prefix": "for0ub", "body": "For \\$i = 0 To UBound(${1}) - 1" },
  "for1": { "prefix": "for1", "body": "For \\$i = 1 To ${1}" },
  "for1ub": { "prefix": "for1ub", "body": "For \\$i = 1 To UBound(${1}) - 1" },
  "ternary": { "prefix": "ternary", "body": "(${1}@compiled) ? (True) : (False)" },
  "setupgui": {
    "prefix": "setupgui",
    "body": [
      "#include <GUIConstants.au3>",
      "#include <GUIConstantsEx.au3>",
      "#include <WindowsConstants.au3>\r\r",
      "#Region - GUI Create",
      "GUICreate('${1}')",
      "GUISetState()",
      "#EndRegion"
    ]
  },
  "selectloop": {
    "prefix": "selectloop",
    "body": [
      "#Region - GUI SelectLoop",
      "While 1",
      "\t\\$msg = GUIGetMsg()",
      "\tSelect",
      "\t\tCase \\$msg = \\$GUI_EVENT_CLOSE",
      "\t\t\tExit",
      "\t\tCase \\$msg = ${1}",
      "\t\tCase \\$msg =",
      "\t\tCase \\$msg =",
      "\t\tCase \\$msg =",
      "\tEndSelect",
      "WEnd",
      "#EndRegion"
    ]
  },
  "switchloop": {
    "prefix": "switchloop",
    "body": [
      "#Region - GUI SwitchLoop",
      "While True",
      "\tSwitch GUIGetMsg()",
      "\t\tCase \\$GUI_EVENT_CLOSE",
      "\t\t\tExit",
      "\t\tCase ${1}",
      "\t\tCase",
      "\t\tCase",
      "\t\tCase Else",
      "\tEndSwitch",
      "WEnd",
      "#EndRegion"
    ]
  },
  "moremsg": {
    "prefix": "moremsg",
    "body": [
      "${1}",
      "Case \\$msg =",
      "Case \\$msg =",
      "Case \\$msg =",
      "Case \\$msg =",
      "Case \\$msg ="
    ]
  },
  "say": {
    "prefix": "say",
    "body": [
      "Func _Say(\\$sText, \\$iRate = 1, \\$iVolume = 100)",
      "\tIf \\$iRate > 10 Or \\$iVolume > 100 Then Return",
      "\tLocal \\$oTalk = ObjCreate('SAPI.SpVoice')",
      "\tIf Not @error Then",
      "\t\t\\$oTalk.Rate = \\$iRate",
      "\t\t\\$oTalk.Volume = \\$iVolume",
      "\t\t\\$oTalk.Speak(\\$sText)",
      "\tEndIf",
      "EndFunc\r"
    ]
  },
  "selfdelete": {
    "prefix": "selfdelete",
    "body": [
      "Func _SelfDelete(\\$iDelay = 0)",
      "\tLocal \\$sCmdFile",
      "\tFileDelete(@TempDir & \"\\scratch.bat\")",
      "\t\\$sCmdFile = 'ping -n ' & \\$iDelay & '127.0.0.1 > nul' & @CRLF _",
      "\t\t& ':loop' & @CRLF _",
      "\t\t& 'del \"' & @ScriptFullPath & '\" > nul' & @CRLF _",
      "\t\t& 'if exist \"' & @ScriptFullPath & '\" goto loop' & @CRLF _",
      "\t\t& 'del ' & @TempDir & 'scratch.bat'",
      "\tFileWrite(@TempDir & \"\\scratch.bat\", \\$sCmdFile)",
      "\tRun(@TempDir & \"\\scratch.bat\", @TempDir, @SW_HIDE)",
      "EndFunc\r"
    ]
  },
  "cmdline": { "prefix": "cmdline", "body": "\\$CMDLINE[${1}]" },
  "cmdlineselect": {
    "prefix": "cmdlineselect",
    "body": [
      "#Region - CmdlineSelect",
      "If \\$CMDLINE[0] Then",
      "\tFor \\$i = 1 To \\$CMDLINE[0]",
      "\t\tSelect",
      "\t\t\tCase \\$CMDLINE[\\$i] = '/?'",
      "\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _",
      "\t\t\t\t\t'Switches are:' & @CRLF _",
      "\t\t\t\t\t& @CRLF & '/extract' _",
      "\t\t\t\t\t& @CRLF & @TAB & 'Extract files to current directory' _",
      "\t\t\t\t\t& @CRLF & '/x${1}' _",
      "\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t& @CRLF & @TAB & '')",
      "\t\t\t\tExit",
      "\t\t\tCase \\$CMDLINE[\\$i] = '/extract'",
      "\t\t\t\tFileInstall('x', @ScriptDir & '')",
      "\t\t\t\tExit",
      "\t\t\tCase \\$CMDLINE[\\$i] = '/x'",
      "\t\t\tCase \\$CMDLINE[\\$i] = '/x'",
      "\t\t\tCase \\$CMDLINE[\\$i] = '/x'",
      "\t\t\tCase \\$CMDLINE[\\$i] = '/x'",
      "\t\t\tCase Else",
      "\t\t\t\tMsgBox(0x40000, 'Incorrect switch used', _",
      "\t\t\t\t\t'Command used:' & @CRLF & \\$CMDLINERAW & @CRLF & _",
      "\t\t\t\t\t@CRLF & 'Use /? for the switches available.')",
      "\t\t\t\tExit",
      "\t\tEndSelect",
      "\tNext",
      "EndIf",
      "#EndRegion"
    ]
  },
  "cmdlineselect2": {
    "prefix": "cmdlineselect2",
    "body": [
      "#Region - CmdlineSelect + Properties",
      "If \\$CMDLINE[0] Then",
      "\tFor \\$i = 1 To \\$CMDLINE[0]",
      "\t\tIf StringLeft(\\$CMDLINE[\\$i], 1) = '/' Then",
      "\t\t\tSelect",
      "\t\t\t\tCase \\$CMDLINE[\\$i] = '/?'",
      "\t\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _",
      "\t\t\t\t\t\t'Switches are:' & @CRLF _",
      "\t\t\t\t\t\t& @CRLF & '/extract' _",
      "\t\t\t\t\t\t& @CRLF & @TAB & 'Extract files to current directory' _",
      "\t\t\t\t\t\t& @CRLF & '/x${1}' _",
      "\t\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t\t& @CRLF & @TAB & '')",
      "\t\t\t\t\tExit",
      "\t\t\t\tCase \\$CMDLINE[\\$i] = '/extract'",
      "\t\t\t\t\tFileInstall('x', @ScriptDir & '')",
      "\t\t\t\t\tExit",
      "\t\t\t\tCase \\$CMDLINE[\\$i] = '/x'",
      "\t\t\t\tCase \\$CMDLINE[\\$i] = '/x'",
      "\t\t\t\tCase \\$CMDLINE[\\$i] = '/x'",
      "\t\t\t\tCase \\$CMDLINE[\\$i] = '/x'",
      "\t\t\t\tCase Else",
      "\t\t\t\t\t_CmdlineMsgBox()",
      "\t\t\tEndSelect",
      "\t\tElse",
      "\t\t\tConst \\$PROPERTY = StringSplit(\\$CMDLINE[\\$i], '=')",
      "\t\t\tIf Not @error Then",
      "\t\t\t\tSelect",
      "\t\t\t\t\tCase \\$PROPERTY[1] = 'x'",
      "\t\t\t\t\t\t\\$x = \\$PROPERTY[2]",
      "\t\t\t\t\tCase \\$PROPERTY[1] = 'x'",
      "\t\t\t\t\t\t\\$x = \\$PROPERTY[2]",
      "\t\t\t\t\tCase \\$PROPERTY[1] = 'x'",
      "\t\t\t\t\t\t\\$x = \\$PROPERTY[2]",
      "\t\t\t\t\tCase \\$PROPERTY[1] = 'x'",
      "\t\t\t\t\t\t\\$x = \\$PROPERTY[2]",
      "\t\t\t\t\tCase \\$PROPERTY[1] = 'x'",
      "\t\t\t\t\t\t\\$x = \\$PROPERTY[2]",
      "\t\t\t\t\tCase Else",
      "\t\t\t\t\t\t_CmdlineMsgBox()",
      "\t\t\t\tEndSelect",
      "\t\t\tElse",
      "\t\t\t\t_CmdlineMsgBox()",
      "\t\t\tEndIf",
      "\t\tEndIf",
      "\tNext",
      "EndIf",
      "Func _CmdlineMsgBox()",
      "\tMsgBox(0x40000, 'Incorrect switch used', _",
      "\t\t'Command used:' & @CRLF & \\$CMDLINERAW & @CRLF & _",
      "\t\t@CRLF & 'Use /? for the switches available.')",
      "\tExit",
      "EndFunc",
      "#EndRegion"
    ]
  },
  "cmdlineswitch": {
    "prefix": "cmdlineswitch",
    "body": [
      "#Region - CmdlineSwitch",
      "If \\$CMDLINE[0] Then",
      "\tFor \\$i = 1 To \\$CMDLINE[0]",
      "\t\tSwitch \\$CMDLINE[\\$i]",
      "\t\t\tCase '/?'",
      "\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _",
      "\t\t\t\t\t'Switches are:' & @CRLF _",
      "\t\t\t\t\t& @CRLF & '/extract' _",
      "\t\t\t\t\t& @CRLF & @TAB & 'Extract files to current directory' _",
      "\t\t\t\t\t& @CRLF & '/x${1}' _",
      "\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t& @CRLF & @TAB & '')",
      "\t\t\t\tExit",
      "\t\t\tCase '/extract'",
      "\t\t\t\tFileInstall('x', @ScriptDir & '')",
      "\t\t\t\tExit",
      "\t\t\tCase '/x'",
      "\t\t\tCase '/x'",
      "\t\t\tCase '/x'",
      "\t\t\tCase '/x'",
      "\t\t\tCase Else",
      "\t\t\t\tMsgBox(0x40000, 'Incorrect switch used', _",
      "\t\t\t\t\t'Command used:' & @CRLF & \\$CMDLINERAW & @CRLF & _",
      "\t\t\t\t\t@CRLF & 'Use /? for the switches available.')",
      "\t\t\t\tExit",
      "\t\tEndSwitch",
      "\tNext",
      "EndIf",
      "#EndRegion"
    ]
  },
  "cmdlineswitch2": {
    "prefix": "cmdlineswitch2",
    "body": [
      "#Region - CmdlineSwitch + Properties",
      "If \\$CMDLINE[0] Then",
      "\tFor \\$i = 1 To \\$CMDLINE[0]",
      "\t\tIf StringLeft(\\$CMDLINE[\\$i], 1) = '/' Then",
      "\t\t\tSwitch \\$CMDLINE[\\$i]",
      "\t\t\t\tCase '/?'",
      "\t\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _",
      "\t\t\t\t\t\t'Switches are:' & @CRLF _",
      "\t\t\t\t\t\t& @CRLF & '/extract' _",
      "\t\t\t\t\t\t& @CRLF & @TAB & 'Extract files to current directory' _",
      "\t\t\t\t\t\t& @CRLF & '/x${1}' _",
      "\t\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t\t& @CRLF & @TAB & '' _",
      "\t\t\t\t\t\t& @CRLF & '/x' _",
      "\t\t\t\t\t\t& @CRLF & @TAB & '')",
      "\t\t\t\t\tExit",
      "\t\t\t\tCase '/extract'",
      "\t\t\t\t\tFileInstall('x', @ScriptDir & '')",
      "\t\t\t\t\tExit",
      "\t\t\t\tCase '/x'",
      "\t\t\t\tCase '/x'",
      "\t\t\t\tCase '/x'",
      "\t\t\t\tCase '/x'",
      "\t\t\t\tCase Else",
      "\t\t\t\t\t_CmdlineMsgBox()",
      "\t\t\tEndSwitch",
      "\t\tElse",
      "\t\t\tConst \\$PROPERTY = StringSplit(\\$CMDLINE[\\$i], '=')",
      "\t\t\tIf Not @error Then",
      "\t\t\t\tSwitch \\$PROPERTY[1]",
      "\t\t\t\t\tCase 'x'",
      "\t\t\t\t\t\t\\$x = \\$PROPERTY[2]",
      "\t\t\t\t\tCase 'x'",
      "\t\t\t\t\t\t\\$x = \\$PROPERTY[2]",
      "\t\t\t\t\tCase 'x'",
      "\t\t\t\t\t\t\\$x = \\$PROPERTY[2]",
      "\t\t\t\t\tCase 'x'",
      "\t\t\t\t\t\t\\$x = \\$PROPERTY[2]",
      "\t\t\t\t\tCase 'x'",
      "\t\t\t\t\t\t\\$x = \\$PROPERTY[2]",
      "\t\t\t\t\tCase Else",
      "\t\t\t\t\t\t_CmdlineMsgBox()",
      "\t\t\t\tEndSwitch",
      "\t\t\tElse",
      "\t\t\t\t_CmdlineMsgBox()",
      "\t\t\tEndIf",
      "\t\tEndIf",
      "\tNext",
      "EndIf",
      "Func _CmdlineMsgBox()",
      "\tMsgBox(0x40000, 'Incorrect switch used', _",
      "\t\t'Command used:' & @CRLF & \\$CMDLINERAW & @CRLF & _",
      "\t\t@CRLF & 'Use /? for the switches available.')",
      "\tExit",
      "EndFunc",
      "#EndRegion"
    ]
  },
  "/AutoIt3ExecuteLine": { "prefix": "ael", "body": "/AutoIt3ExecuteLine ${1}" },
  "/AutoIt3ExecuteScript": { "prefix": "aes", "body": "/AutoIt3ExecuteScript ${1}" },
  "raes": {
    "prefix": "raes",
    "body": "Run('\"' & @AutoItExe & '\" /AutoIt3ExecuteScript \"' & ${1} & '\"')"
  },
  "rwaes": {
    "prefix": "rwaes",
    "body": "RunWait('\"' & @AutoItExe & '\" /AutoIt3ExecuteScript \"' & ${1} & '\"')"
  },
  "rael": {
    "prefix": "rael",
    "body": "Run('\"' & @AutoItExe & '\" /AutoIt3ExecuteLine \"' & ${1} & '\"')"
  },
  "rwael": {
    "prefix": "rwael",
    "body": "RunWait('\"' & @AutoItExe & '\" /AutoIt3ExecuteLine \"' & ${1} & '\"')"
  }
}

{
    "_WinAPI_CreateCaret": [
        "Creates a new shape for the system caret and assigns ownership of the caret to the specified window",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_CreateCaret ( $hWnd, $hBitmap [, $iWidth = 0 [, $iHeight = 0]] )\r```"
    ],
    "_WinAPI_DestroyCaret": [
        "Destroys the caret's current shape, frees the caret from the window, and removes the caret from the screen",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_DestroyCaret ( )\r```"
    ],
    "_WinAPI_GetCaretBlinkTime": [
        "Returns the time required to invert the caret's pixels",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_GetCaretBlinkTime ( )\r```"
    ],
    "_WinAPI_GetCaretPos": [
        "Retrieves the caret's position",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_GetCaretPos ( )\r```"
    ],
    "_WinAPI_HideCaret": [
        "Removes the caret from the screen",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_HideCaret ( $hWnd )\r```"
    ],
    "_WinAPI_SetCaretBlinkTime": [
        "Sets the caret blink time",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_SetCaretBlinkTime ( $iDuration )\r```"
    ],
    "_WinAPI_SetCaretPos": [
        "Moves the caret to the specified coordinates",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_SetCaretPos ( $iX, $iY )\r```"
    ],
    "_WinAPI_ShowCaret": [
        "Makes the caret visible on the screen at the caret's current position",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_ShowCaret ( $hWnd )\r```"
    ],
    "_WinAPI_ClipCursor": [
        "Confines the cursor to a rectangular area on the screen",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_ClipCursor ( $tRECT )\r```"
    ],
    "_WinAPI_CopyCursor": [
        "Creates a duplicate of a specified cursor",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_CopyCursor ( $hCursor )\r```"
    ],
    "_WinAPI_DestroyCursor": [
        "Destroys a cursor and frees any memory the cursor occupied",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_DestroyCursor ( $hCursor )\r```"
    ],
    "_WinAPI_GetClipCursor": [
        "Retrieves the screen coordinates of the rectangular area to which the cursor is confined",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_GetClipCursor ( )\r```"
    ],
    "_WinAPI_GetCursor": [
        "Retrieves a handle to the current cursor",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_GetCursor ( )\r```"
    ],
    "_WinAPI_LoadCursor": [
        "Loads the specified cursor resource from the executable (.exe) file",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_LoadCursor ( $hInstance, $sName )\r```"
    ],
    "_WinAPI_LoadCursorFromFile": [
        "Creates a cursor based on data contained in a file",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_LoadCursorFromFile ( $sFilePath )\r```"
    ],
    "_WinAPI_SetSystemCursor": [
        "Enables an application to customize the system cursors",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_SetSystemCursor ( $hCursor, $iID [, $bCopy = False] )\r```"
    ],
    "_WinAPI_AddIconTransparency": [
        "Adds a transparency to the specified 32 bits-per-pixel icon",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_AddIconTransparency ( $hIcon [, $iPercent = 50 [, $bDelete = False]] )\r```"
    ],
    "_WinAPI_CreateIcon": [
        "Creates an icon that has the specified size, colors, and bit patterns",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_CreateIcon ( $hInstance, $iWidth, $iHeight, $iPlanes, $iBitsPixel, $pANDBits, $pXORBits )\r```"
    ],
    "_WinAPI_CreateIconFromResourceEx": [
        "Creates an icon or cursor from resource bits describing the icon",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_CreateIconFromResourceEx ( $pData, $iSize [, $bIcon = True [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]] )\r```"
    ],
    "_WinAPI_ExtractIcon": [
        "Extracts an icon from the specified executable file, DLL, or icon file",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_ExtractIcon ( $sIcon, $iIndex [, $bSmall = False] )\r```"
    ],
    "_WinAPI_FileIconInit": [
        "Initializes or reinitializes the system image list",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_FileIconInit ( [$bRestore = True] )\r```"
    ],
    "_WinAPI_GetIconInfoEx": [
        "Retrieves information about the specified icon or cursor",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_GetIconInfoEx ( $hIcon )\r```"
    ],
    "_WinAPI_LoadIcon": [
        "Loads the specified icon resource from the executable (.exe) file associated with an application instance",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_LoadIcon ( $hInstance, $sName )\r```"
    ],
    "_WinAPI_LookupIconIdFromDirectoryEx": [
        "Searches through icon or cursor data for the icon or cursor that best fits the current display device",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_LookupIconIdFromDirectoryEx ( $pData [, $bIcon = True [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]] )\r```"
    ],
    "_WinAPI_BeginUpdateResource": [
        "Retrieves a handle that can be used to add, delete, or replace resources in a binary module",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_BeginUpdateResource ( $sFilePath [, $bDelete = False] )\r```"
    ],
    "_WinAPI_EndUpdateResource": [
        "Commits or discards a changes of the resources within module",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_EndUpdateResource ( $hUpdate [, $bDiscard = False] )\r```"
    ],
    "_WinAPI_EnumResourceLanguages": [
        "Enumerates a language-specific resources, of the specified type and name, associated with a binary module",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_EnumResourceLanguages ( $hModule, $sType, $sName )\r```"
    ],
    "_WinAPI_EnumResourceNames": [
        "Enumerates the resources of a specified type within a binary module",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_EnumResourceNames ( $hModule, $sType )\r```"
    ],
    "_WinAPI_EnumResourceTypes": [
        "Enumerates the resource types within a binary module",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_EnumResourceTypes ( $hModule )\r```"
    ],
    "_WinAPI_FindResource": [
        "Determines the location of a resource with the specified type and name in the specified module",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_FindResource ( $hInstance, $sType, $sName )\r```"
    ],
    "_WinAPI_FindResourceEx": [
        "Determines the location of the resource with the specified type, name, and language in the specified module",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_FindResourceEx ( $hInstance, $sType, $sName, $iLanguage )\r```"
    ],
    "_WinAPI_FreeResource": [
        "Decrements (decreases by one) the reference count of a loaded resource",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_FreeResource ( $hData )\r```"
    ],
    "_WinAPI_GetFileVersionInfo": [
        "Retrieves version information for the specified file",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_GetFileVersionInfo ( $sFilePath, ByRef $pBuffer [, $iFlags = 0] )\r```"
    ],
    "_WinAPI_LoadIndirectString": [
        "Extracts the string from the specified resource when given an indirect string",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_LoadIndirectString ( $sStrIn )\r```"
    ],
    "_WinAPI_LoadResource": [
        "Loads the specified resource into global memory",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_LoadResource ( $hInstance, $hResource )\r```"
    ],
    "_WinAPI_LoadStringEx": [
        "Loads a string resource for the specified language from the specified module",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_LoadStringEx ( $hModule, $iID [, $iLanguage = $LOCALE_USER_DEFAULT] )\r```"
    ],
    "_WinAPI_LockResource": [
        "Locks the specified resource in memory",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_LockResource ( $hData )\r```"
    ],
    "_WinAPI_SizeOfResource": [
        "Returns the size, in bytes, of the specified resource",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_SizeOfResource ( $hInstance, $hResource )\r```"
    ],
    "_WinAPI_UpdateResource": [
        "Adds, deletes, or replaces a resource in a portable executable (PE) file",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_UpdateResource ( $hUpdate, $sType, $sName, $iLanguage, $pData, $iSize )\r```"
    ],
    "_WinAPI_VerQueryRoot": [
        "Retrieves the fixed version information from the specified version-information resource",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_VerQueryRoot ( $pData )\r```"
    ],
    "_WinAPI_VerQueryValue": [
        "Retrieves the non-fixed (strings) version information from the specified version-information resource",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_VerQueryValue ( $pData [, $sValues = ''] )\r```"
    ],
    "_WinAPI_VerQueryValueEx": [
        "Retrieves the text information from the version-information resource of the specified binary module",
        "```\r#include <WinAPIRes.au3>\r_WinAPI_VerQueryValueEx ( $hModule [, $sValues = '' [, $iLanguage = 0x0400]] )\r```"
    ]    
}
